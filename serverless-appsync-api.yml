name: appsync-graphql-serverless-api
schema: ./appsync/schema.api.graphql
authenticationType: API_KEY
apiKeys:
  - apiKey
mappingTemplatesLocation: ./appsync/mapping-templates
mappingTemplates: ${file(./appsync/app-sync-mapping-templates.yml)}

dataSources:
  - type: AWS_LAMBDA
    name: createTenant
    description: 'Lambda'
    config:
      functionName: createTenantGraphQl
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "lambda:invokeFunction"
          Resource:
            - "arn:aws:lambda:${aws:region}:${aws:accountId}:function:serverless-backend-service-${opt:stage}-createTenantGraphQl"
  - type: AWS_LAMBDA
    name: getTenant
    description: 'Lambda'
    config:
      functionName: getTenantGraphQl
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "lambda:invokeFunction"
          Resource:
            - "arn:aws:lambda:${aws:region}:${aws:accountId}:function:serverless-backend-service-${opt:stage}-getTenantGraphQl"
  - type: AWS_LAMBDA
    name: deleteTenant
    description: 'Lambda'
    config:
      functionName: deleteTenantGraphQl
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "lambda:invokeFunction"
          Resource:
            - "arn:aws:lambda:${aws:region}:${aws:accountId}:function:serverless-backend-service-${opt:stage}-deleteTenantGraphQl"
  - type: AWS_LAMBDA
    name: updateTenant
    description: 'Lambda'
    config:
      functionName: updateTenantGraphQl
      iamRoleStatements:
        - Effect: "Allow"
          Action:
            - "lambda:invokeFunction"
          Resource:
            - "arn:aws:lambda:${aws:region}:${aws:accountId}:function:serverless-backend-service-${opt:stage}-updateTenantGraphQl"