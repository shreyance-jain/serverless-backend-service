AWSTemplateFormatVersion: "2010-09-09"
Description: Deployment pipline for the backend service
Parameters:
  GithubRepoOwner:
    Type: String
    Default: github-repo-owner
  GithubRepoName:
    Type: String
    Default: github-repo-name
  GithubRepoBranch:
    Type: String
    Default: main
  Stage:
    Type: String
    AllowedValues: [latest, test, beta, prod, parvati]
  DaxEndpoint:
    Type: String
    Description: if you have the dax cluster configured
Mappings:
  StageMap:
    latest:
      vpc: vpc_id_latest
    test:
      vpc: vpc_id_test
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment
        Parameters:
          - Stage
      - Label:
          default: Source code repository
        Parameters:
          - GithubRepoOwner
          - GithubRepoName
          - GithubRepoBranch
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Suspended
      AccessControl: BucketOwnerFullControl
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: true
      DisableInboundStageTransitions:
        - StageName: Deploy
          Reason: 'Disable transition until ready to deploy.'
      RoleArn: !GetAtt PipelineRole.Arn
      Name: !Ref AWS::StackName
      ArtifactStore:
        Location:
          Ref: ArtifactStoreBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GithubRepoOwner
                Repo: !Ref GithubRepoName
                Branch: !Ref GithubRepoBranch
                OAuthToken: "{{resolve:secretsmanager:tokens:SecretString:GithubToken}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployBackend
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DeployBackendOutput
              Configuration:
                ProjectName: !Ref DeployBackendBuild
              RunOrder: 1
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      AuthenticationConfiguration: 
        SecretToken: "{{resolve:secretsmanager:tokens:SecretString:GithubToken}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      Name: !Ref AWS::StackName
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}
                  - !Sub arn:aws:s3:::${ArtifactStoreBucket}/*
  DeployBackendBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}
      ServiceRole: !Ref DeployBackendBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          env:
            variables:
              SLS_DEBUG: 'true'
              NODE_ENV: 'production'
              STAGE: '${Stage}'
              DAX_ENDPOINT: '${DaxEndpoint}'
              REGION: '${AWS::Region}'
          phases:
            install:
              runtime-version:
                nodejs: 14
              commands:
                - make install
            build:
              commands:
                - make deploy stage=$STAGE
  DeployBackendBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - logs:*
                  - events:*
                  - cloudwatch:*
                  - lambda:*
                  - route53:ListHostedZones
                  - route53:ChangeResourceRecordSets
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - cloudfront:UpdateDistribution
                  - acm:ListCertificates
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:ListBucket
                  - s3:ListBucketVersions
                  - s3:GetBucketVersioning
                  - s3:PutBucketVersioning
                  - s3:GetBucketLocation
                  - s3:PutLifecycleConfiguration
                  - s3:PutBucketCORS
                  - s3:PutBucketNotification
                  - s3:DeleteBucketNotification
                  - s3:SetBucketEncryption
                  - s3:DeleteBucketEncryption
                  - s3:GetEncryptionConfiguration
                  - s3:PutEncryptionConfiguration
                  - cloudformation:CreateStack
                  - cloudformation:CreateUploadBucket
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                  - cloudformation:DescribeStackResources
                  - cloudformation:UpdateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:ValidateTemplate
                  - cloudformation:ListStackResources
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:GetRole
                  - iam:PassRole
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:DetachRolePolicy
                  - iam:AttachRolePolicy
                  - ec2:DescribeAccountAttributes
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcs
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DetachNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - sqs:CreateQueue
                  - sqs:GetQueueAttributes
                  - sqs:DeleteQueue
                  - sqs:SetQueueAttributes
                  - SNS:Subscribe
                  - SNS:Unsubscribe
                  - servicediscovery:CreateService
                  - servicediscovery:TagResource
                  - servicediscovery:RegisterInstance
                  - servicediscovery:GetOperation
                  - servicediscovery:DeregisterInstance
                  - secretsmanager:GetSecretValue
                  - ssm:GetParameter
                  - wafv2:CreateWebACL
                  - wafv2:GetWebACL
                  - wafv2:ListWebACLs
                  - wafv2:ListTagsForResource
                  - wafv2:AssociateWebACL
                  - wafv2:UpdateWebACL
                Resource: "*"
              
